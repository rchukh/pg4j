description = 'PostgreSQL extensions support for JPA'

project("pg4j-core") {
    description = 'PG4J core (Hibernate and JPA support)'
}
project("pg4j-spring-data") {
    description = 'PG4J support for spring-data-jpa'
}

subprojects {
    group = "com.github.pg4j"
    version = "0.2-SNAPSHOT"

    // Properties
    ext {
        sourceEncoding = "UTF-8"
        license = new File(project.getRootProject().getRootDir().getPath() + '/LICENSE.md').getText('UTF-8')

        // Dependencies
        // Database
        postgresql = "9.2-1003-jdbc4"
        hibernate = "4.3.0.Beta5"
        hibernateJPA21 = "1.0.0.Final"

        // Loggers
        slf4j = "1.7.5"
        logback = "1.0.13"

        // Tools
        guava = "15.0"
        jackson = "2.2.3"
        jacksonJSR310 = "2.2.2-beta4"

        // Testing
        junit = "4.11"
    }

    // Extra plugins
    apply plugin: "java"
    apply plugin: 'maven'
    apply plugin: 'signing'
    apply plugin: 'eclipse'
    apply plugin: "sonar-runner"


    repositories {
        mavenCentral()
        // JBoss Release Repository
        maven { url "https://repository.jboss.org/nexus/content/groups/public/" }
    }

    dependencies {
        compile(
                [group: 'org.postgresql', name: 'postgresql', version: "${postgresql}"],
                [group: 'org.slf4j', name: 'slf4j-api', version: "${slf4j}"],
                // Hibernate
                [group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: "${hibernateJPA21}"],
                [group: 'org.hibernate', name: 'hibernate-entitymanager', version: "${hibernate}"],
                // Tools
                [group: 'com.google.guava', name: 'guava', version: "${guava}"],
                [group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "${jackson}"],
                [group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: "${jacksonJSR310}"]
        )
        runtime(
                [group: 'ch.qos.logback', name: 'logback-core', version: "${logback}"],
                [group: 'ch.qos.logback', name: 'logback-classic', version: "${logback}"],
                [group: 'ch.qos.logback', name: 'logback-access', version: "${logback}"]
        )
        testCompile(
                [group: 'junit', name: 'junit', version: "${junit}"]
        )
    }

    // Compiler settings
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    // All compilers will use same encoding
    tasks.withType(Compile) {
        options.encoding = "${sourceEncoding}"
    }

    // Maven settings
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    signing {
        sign configurations.archives
    }

    // Sonar settings
    sonarRunner {
        sonarProperties {
            property "sonar.host.url", "http://localhost:9000"
            property "sonar.jdbc.url", "jdbc:postgresql://localhost/sonar"
            property "sonar.jdbc.driverClassName", "org.postgresql.Driver"
            property "sonar.jdbc.username", "techsupport"
            property "sonar.jdbc.password", "techsupport"
            property "sonar.sourceEncoding", "${sourceEncoding}"
        }
    }

    // Send packages to 'dist' folder
    uploadArchives {
        repositories {
            flatDir {
                dirs 'dist'
            }
            // TODO: Switch maven repo with profiles?
//            mavenDeployer {
//                repository(url: "${mavenRepo}")
//                pom.project {
////                    description project.description
//                    url 'https://github.com/rchukh/pg4j'
//                    packaging 'jar'
//                   scm {
//                        url 'scm:git@github.com:rchukh/pg4j.git'
//                        connection 'scm:git@github.com:rchukh/pg4j.git'
//                        developerConnection 'scm:git@github.com:rchukh/pg4j.git'
//                    }
//                    licenses {
//                        license {
//                            name 'BSD 2-Clause license'
//                            url 'http://opensource.org/licenses/BSD-2-Clause'
//                            comments "$license"
//                            distribution 'repo'
//                        }
//                    }
//                    developers {
//                        developer {
//                            id = 'rchukh'
//                            name = 'Roman Chukh'
//                            email = 'roman.chukh@gmail.com'
//                            url = 'https://github.com/rchukh'
//                            timezone = '+2'
//                        }
//                    }
//                }
//            }
        }
    }
}
